定义：为创建一组相关或相互依赖的对象提供一个接口，而且无需指定它们的具体类。
特点：有多个互相影响的产品线，且它们都遵循一定的约束。
有N个产品族，在抽象工厂中就应该有N个创建方法。
有M个产品等级就应该有M个实现工厂类，在每个实现工厂中，实现不同产品族的生产任务。
只需要知道产品的工厂方法就可以直接产生一个产品对象，不需要关心实现类。
优点：
1、封装性；只需要关心接口即工厂类
2、产品族内的约束为非公开状态；产品族内的约束只需要在工厂内实现即可
缺点：
1、产品族拓展困难；当需要增加一个产品族时修改了接口，违背了开闭原则
横向拓展容易，纵向拓展困难，如产品种类拓展困难，产品等级拓展容易
场景：
一个对象族（或是一组没有任何关系的对象）eg：不同操作系统下的一系列软件
