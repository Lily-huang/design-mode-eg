定义：用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象
原型模型的核心是一个clone方法，通过该方法进行对象的拷贝，Java提供了一个Cloneable接口来标志这个对象是可拷贝的，实现需要重写Object的clone方法
优点：
1、性能优良
内存二进制流的拷贝，比直接new一个对象性能好很多，尤其需要在循环体内产生大量对象时
2、逃避构造函数的约束
直接在内存中拷贝，构造函数时不会执行的，减少了约束，但也是缺点
场景：
1、资源优化场景
2、性能和安全要求的场景
3、一个对象多个修改者的场景
注意事项：
1、构造函数不会被执行
2、浅拷贝和深拷贝
浅拷贝：Object类提供的clone方法只是拷贝对象，其对内部的数组、引用对象等都不拷贝，还是指向原生对象的内部元素地址
满足两个条件才会是浅拷贝可以同时修改：1）是类的成员变量而不是方法内变量；2）必须是一个可变的引用对象而不是一个原始类型或不可变对象
深拷贝：完全拷贝，两个对象之间没有任何关联，各自的修改互补产生影响
3、clone和final
要使用clone方法，类的成员变量上不要增加final关键字

*********************************
console out
origin: [a] <深拷贝> clone: [a, a1]
origin: [b, b1] <浅拷贝> clone: [b, b1]
origin: c <基本类型> clone: c1



